name: Build and publish docker images

on:
  push:
    tags:
      - '*'
  workflow_dispatch:
  schedule:
    - cron: "0 2 1 * *"

jobs:
  build:
    name: Build & push docker image
    runs-on: ubuntu-latest
    permissions:
      packages: write
      security-events: write
      contents: read
    strategy:
      fail-fast: false
      matrix:
        include:
          - context: ./php8.4-composer
            image: ghcr.io/move-elevator/php8.4-composer
            sarif: php8.4-composer.sarif

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to GitHub container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ matrix.image }}
          tags: |
            type=ref,event=tag
            type=raw,value=latest

      - name: Set image tag for Trivy
        id: tag
        run: |
          if [[ "${GITHUB_REF_TYPE}" == "tag" ]]; then
            echo "tag=${GITHUB_REF_NAME}" >> $GITHUB_OUTPUT
          else
            echo "tag=latest" >> $GITHUB_OUTPUT
          fi

      - name: Build and publish docker image
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.context }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.30.0
        with:
          image-ref: ${{ matrix.image }}:${{ steps.tag.outputs.tag }}
          format: 'sarif'
          output: '${{ matrix.sarif }}'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: '${{ matrix.sarif }}'